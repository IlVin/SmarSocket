// https://www.arduino.cc/en/Tutorial/MasterWriter
// https://www.arduino.cc/en/Tutorial/MasterReader
// https://lesson.iarduino.ru/page/urok-26-3-soedinyaem-dve-arduino-po-shine-i2c/
//
// MASTER
// Подключаем библиотеки:
#include <Wire.h>                                     // подключаем библиотеку для работы с шиной I2C
#include <LiquidCrystal_I2C.h>                        // подключаем библиотеку для работы с LCD дисплеем
#include <iarduino_I2C_connect.h>                     // подключаем библиотеку для соединения arduino по шине I2C
// Объявляем переменные и константы:
iarduino_I2C_connect I2C2;                            // объявляем переменную для работы c библиотекой iarduino_I2C_connect
LiquidCrystal_I2C    lcd(0x27,16,2);                  // объявляем переменную для работы с LCD дисплеем, указывая параметры дисплея (адрес I2C = 0x27, количество столбцов = 16, количество строк = 2)
const byte           PIN_Button_master = 2;           // объявляем константу с указанием номера цифрового вывода, к которому подключена кнопка
      bool           VAR_Button_master = 0;           // объявляем переменную для чтения состояний собственной кнопки
      bool           VAR_Button_slave  = 0;           // объявляем переменную для чтения состояний кнопки ведомого 0x77
      int            VAR_Potentiometer = 0;           // объявляем переменную для чтения значения с потенциометра ведомого 0x77
void setup(){
  //Wire.setClock(400000);                              // устанавливаем скорость передачи данных по шине I2C = 400кБит/с
  Wire.begin();                                       // инициируем подключение к шине I2C в качестве ведущего (master) устройства
  pinMode(PIN_Button_master, INPUT);                  // Устанавливаем режим работы вывода собственной кнопки, как вход
  //Выводим данные на LCD дисплей:
  lcd.init();                                         // инициируем LCD дисплей
  lcd.backlight();                                    // включаем подсветку LCD дисплея
  lcd.setCursor(0, 0); lcd.print("iArduino.ru");      // выводим текст "iArduino.ru"
  delay(1000);                                        // ждём 1 секунду
  lcd.setCursor(0, 0); lcd.print("button   = ");      // выводим текст "button   = "
  lcd.setCursor(0, 1); lcd.print("resistor = ");      // выводим текст "resistor = "
}

void loop(){
  //Считываем данные:
  VAR_Button_master  = digitalRead(PIN_Button_master);// Считываем состояние собственной кнопки
  VAR_Button_slave   = I2C2.readByte(0x01,0);         // Считываем состояние кнопки ведомого (адрес ведомого 0x01, номер регистра 0)
  VAR_Potentiometer  = I2C2.readByte(0x02,1)<<8;      // Считываем старший байт значения потенциометра ведомого (адрес ведомого 0x02, номер регистра 1), сдвигаем полученный байт на 8 бит влево, т.к. он старший
  VAR_Potentiometer += I2C2.readByte(0x02,2);         // Считываем младший байт значения потенциометра ведомого (адрес ведомого 0x02, номер регистра 2), добавляя его значение к ранее полученному старшему байту
  //Отправляем данные:
  I2C2.writeByte(0x02,0,VAR_Button_master);           // Отправляем состояние собственной кнопки ведомому (адрес ведомого 0x02, номер регистра 0, состояние кнопки)
  //Выводим данные на LCD дисплей:
  lcd.setCursor(11, 0); lcd.print("    ");            // стираем предыдущее состояние кнопки ведомого 0x01
  lcd.setCursor(11, 0); lcd.print(VAR_Button_slave);  // выводим состояние кнопки ведомого 0x01
  lcd.setCursor(11, 1); lcd.print("    ");            // стираем предыдущее значение потенциометра ведомого 0x02
  lcd.setCursor(11, 1); lcd.print(VAR_Potentiometer); // выводим значение потенциометра ведомого 0x02
  delay(50);                                          // ждём 0.05 секунд, иначе данные на LCD дисплее будут заметно мерцать
}



// SLAVE
// Подключаем библиотеки:
#include <Wire.h>                                     // подключаем библиотеку для работы с шиной I2C
#include <iarduino_I2C_connect.h>                     // подключаем библиотеку для соединения arduino по шине I2C
// Объявляем переменные и константы:
iarduino_I2C_connect I2C2;                            // объявляем переменную для работы c библиотекой iarduino_I2C_connect
const byte           PIN_Button = 2;                  // объявляем константу с указанием номера цифрового вывода, к которому подключена кнопка
      byte           REG_Array[1];                    // объявляем массив, данные которого будут доступны для чтения/записи по шине I2C
void setup(){
//Wire.setClock(400000);                              // устанавливаем скорость передачи данных по шине I2C = 400кБит/с
  Wire.begin(0x01);                                   // инициируем подключение к шине I2C в качестве ведомого (slave) устройства, с указанием своего адреса на шине.
  I2C2.begin(REG_Array);                              // инициируем возможность чтения/записи данных по шине I2C, из/в указываемый массив
  pinMode(PIN_Button, INPUT);                         // Устанавливаем режим работы вывода кнопки, как вход
}
void loop(){
  REG_Array[0] = digitalRead(PIN_Button);             // Сохраняем состояние кнопки в 0 ячейку массива REG_Massive
}


// SLAVE 2
// Подключаем библиотеки:
#include <Wire.h>                                     // подключаем библиотеку для работы с шиной I2C
#include <iarduino_I2C_connect.h>                     // подключаем библиотеку для соединения arduino по шине I2C
// Объявляем переменные и константы:
iarduino_I2C_connect I2C2;                            // объявляем переменную для работы c библиотекой iarduino_I2C_connect
const byte           PIN_Potentiometer = 0;           // объявляем константу с указанием номера аналогового вывода, к которому подключён потенциометр
const byte           PIN_LED           = 13;          // объявляем константу с указанием номера цифрового вывода, к которому подключен светодиод
      int            VAR_Potentiometer = 0;           // объявляем переменную для чтения значения с потенциометра
      byte           REG_Massive[3];                  // объявляем массив, данные которого будут доступны для чтения/записи по шине I2C
void setup(){
//Wire.setClock(400000);                              // устанавливаем скорость передачи данных по шине I2C = 400кБит/с
  Wire.begin(0x02);                                   // инициируем подключение к шине I2C в качестве ведомого (slave) устройства, с указанием своего адреса на шине.
  I2C2.begin(REG_Massive);                            // инициируем возможность чтения/записи данных по шине I2C, из/в указываемый массив
  pinMode(PIN_LED, OUTPUT);                           // Устанавливаем режим работы вывода светодиода, как выход
}
void loop(){
  VAR_Potentiometer = analogRead(PIN_Potentiometer);  // Считываем значение потенциометра
  REG_Massive[1]    = VAR_Potentiometer>>8;           // Сохраняем старший байт значения потенциометра в  1 ячейку массива REG_Massive
  REG_Massive[2]    = VAR_Potentiometer;              // Сохраняем младший байт значения потенциометра во 2 ячейку массива REG_Massive
  digitalWrite(PIN_LED, REG_Massive[0]);              // вкл/выкл светодиод в соответствии со значением 0 элемента массива REG_Massive
}
